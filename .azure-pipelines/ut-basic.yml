trigger: none

pr:
  autoCancel: true
  drafts: false
  branches:
    include:
      - master
  paths:
    include:
      - neural_compressor
      - test
      - setup.py
      - requirements.txt
      - .azure-pipelines/ut-basic.yml
      - .azure-pipelines/template/docker-template.yml
      - .azure-pipelines/scripts/ut
      - .azure-pipelines/scripts/fwk_version.sh
      - .azure-pipelines/scripts/install_nc.sh
    exclude:
      - test/3x
      - neural_compressor/common
      - neural_compressor/torch
      - neural_compressor/tensorflow
      - neural_compressor/onnxrt
      - neural_compressor/transformers
      - neural_compressor/evaluation
      - .azure-pipelines/scripts/ut/3x

pool: ICX-16C

variables:
  IMAGE_NAME: "neural-compressor"
  IMAGE_TAG: "py310"
  UPLOAD_PATH: $(Build.SourcesDirectory)/log_dir
  DOWNLOAD_PATH: $(Build.SourcesDirectory)/log_dir
  ARTIFACT_NAME: "UT_coverage_report"
  REPO: $(Build.Repository.Uri)

stages:
  - stage: Adaptor
    displayName: Unit Test FWKs adaptor
    dependsOn: []
    jobs:
      - job:
        displayName: Test FWKs adaptor
        steps:
          - template: template/ut-template.yml
            parameters:
              dockerConfigName: "commonDockerConfig"
              utScriptFileName: "run_basic_adaptor"
              uploadPath: $(UPLOAD_PATH)
              utArtifact: "ut_adaptor"

  - stage: API
    displayName: Unit Test User facing API
    dependsOn: []
    jobs:
      - job:
        displayName: Test User facing API
        steps:
          - template: template/ut-template.yml
            parameters:
              dockerConfigName: "commonDockerConfig"
              utScriptFileName: "run_basic_api"
              uploadPath: $(UPLOAD_PATH)
              utArtifact: "ut_api"

  - stage: Pruning
    displayName: Unit Test Pruning
    dependsOn: []
    jobs:
      - job:
        displayName: Test PyTorch Pruning
        steps:
          - template: template/ut-template.yml
            parameters:
              dockerConfigName: "commonDockerConfig"
              utScriptFileName: "run_basic_pt_pruning"
              uploadPath: $(UPLOAD_PATH)
              utArtifact: "ut_pt-pruning"
      - job:
        displayName: Test TensorFlow Pruning
        steps:
          - template: template/ut-template.yml
            parameters:
              dockerConfigName: "commonDockerConfig"
              utScriptFileName: "run_basic_tf_pruning"
              uploadPath: $(UPLOAD_PATH)
              utArtifact: "ut_tf-pruning"

  - stage: TFNewAPI
    displayName: Unit Test TF newAPI
    dependsOn: []
    jobs:
      - job:
        displayName: Test TF newAPI
        steps:
          - template: template/ut-template.yml
            parameters:
              dockerConfigName: "commonDockerConfig"
              utScriptFileName: "run_basic_adaptor_tfnewapi"
              uploadPath: $(UPLOAD_PATH)
              utArtifact: "ut_tfnewapi"

  - stage: ITEX
    displayName: Unit Test ITEX
    dependsOn: []
    jobs:
      - job:
        displayName: Test ITEX
        steps:
          - template: template/ut-template.yml
            parameters:
              dockerConfigName: "commonDockerConfig"
              utScriptFileName: "run_basic_itex"
              uploadPath: $(UPLOAD_PATH)
              utArtifact: "ut_itex"

  - stage: Others
    displayName: Unit Test other basic case
    dependsOn: []
    jobs:
      - job:
        displayName: Test other basic case
        steps:
          - template: template/ut-template.yml
            parameters:
              dockerConfigName: "commonDockerConfig"
              utScriptFileName: "run_basic_others"
              uploadPath: $(UPLOAD_PATH)
              utArtifact: "ut_others"
